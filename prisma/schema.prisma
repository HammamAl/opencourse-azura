generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cart {
  user_id   String
  course_id String
  course    course @relation(fields: [course_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users     users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, course_id])
}

model category {
  id         String    @id
  name       String    @unique
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  course     course[]
}

model course {
  id                      String                   @id
  title                   String
  description             String
  course_duration         Decimal                  @db.Decimal
  estimated_time_per_week Decimal                  @db.Decimal
  price                   Decimal                  @db.Decimal(12, 2)
  language                String
  lecturer_id             String
  cover_image_url         String?
  created_at              DateTime                 @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?                @db.Timestamptz(6)
  deleted_at              DateTime?                @db.Timestamptz(6)
  category_id             String
  admin_review            String?
  status                  String
  cart                    cart[]
  category                category                 @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users                   users                    @relation(fields: [lecturer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  course_enrollment       course_enrollment[]
  course_learning_target  course_learning_target[]
  course_section          course_section[]
  payment                 payment[]
}

model course_enrollment {
  id          String
  course_id   String
  enrolled_at DateTime  @db.Timestamptz(6)
  delisted_at DateTime? @db.Timestamptz(6)
  course      course    @relation(fields: [course_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users       users     @relation(fields: [id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([id, course_id])
}

model course_learning_target {
  id          String    @id
  course_id   String
  description String
  order_index Int
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  course      course    @relation(fields: [course_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model course_material {
  id                String
  title             String
  course_section_id String
  youtube_link      String?
  content           Json?
  created_at        DateTime       @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?      @db.Timestamptz(6)
  deleted_at        DateTime?      @db.Timestamptz(6)
  course_section    course_section @relation(fields: [course_section_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([id, course_section_id])
}

model course_section {
  id              String            @id
  course_id       String
  title           String
  order_index     Int
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?         @db.Timestamptz(6)
  deleted_at      DateTime?         @db.Timestamptz(6)
  course_material course_material[]
  course          course            @relation(fields: [course_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model payment {
  id             String   @id
  user_id        String
  course_id      String
  amount         Decimal  @db.Decimal(12, 2)
  payment_status String
  created_at     DateTime @db.Timestamptz(6)
  invoice_id     String
  course         course   @relation(fields: [course_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users          users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id                        String              @id
  email                     String?             @unique
  name                      String
  full_name                 String
  password                  String
  role                      String
  phone_number              String?
  users_profile_picture_url String?
  nidn_number               String?
  title                     String?
  created_at                DateTime            @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?           @db.Timestamptz(6)
  deleted_at                DateTime?           @db.Timestamptz(6)
  reset_code                String?
  reset_code_expiry         DateTime?           @db.Timestamptz(6)
  cart                      cart[]
  course                    course[]
  course_enrollment         course_enrollment[]
  payment                   payment[]
}
